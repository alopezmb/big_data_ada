version: '3'
services:

  cassandra-1:
    image: cassandra:3.11
    volumes:
      - "cassandra1data:/var/lib/cassandra"
      - "./cassandra:/config_db/"
    environment:
      - "CASSANDRA_SEEDS=cassandra-1"
      - "CASSANDRA_CLUSTER_NAME=Cassandra Flight Delay Prediction"
      - "CASSANDRA_BROADCAST_ADDRESS=cassandra-1"
    ports:
     - "9042:9042"
    networks:
      - flight_prediction_network

  cassandra-2:
    image: cassandra:3.11
    volumes:
      - "cassandra2data:/var/lib/cassandra"
      - "./cassandra:/config_db/"
    environment:
      - "CASSANDRA_SEEDS=cassandra-1"
      - "CASSANDRA_CLUSTER_NAME=Cassandra Flight Delay Prediction"
      - "CASSANDRA_BROADCAST_ADDRESS=cassandra-2"
    ports:
      - "9043:9042"
    networks:
      - flight_prediction_network
  
  webserver:
    container_name: webserver
    build: ./flask
    ports:
      - "80:80"
    networks:
      - flight_prediction_network
    volumes:
      - ./flask/app:/app/

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - flight_prediction_network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.3.0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
     - zookeeper
    networks:
      - flight_prediction_network

  # Container that will create topics and then will die gracefully.
  kafka-setup:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic flight_delay_classification_request'"
    networks:
      - flight_prediction_network
 
  spark-master:
    container_name: spark-master
    image: bitnami/spark:2.4.4
    environment:
      - SPARK_MODE=master
    ports:
      - '8080:8080'
    volumes:
      - ./spark/models/:/job_data/models #Bind mount to mount models dir on each spark node
    networks:
      - flight_prediction_network

  spark-worker-1:
    container_name: spark-worker-1
    image: bitnami/spark:2.4.4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    ports:
    - '8081:8081'
    volumes:
      - ./spark/models/:/job_data/models  #Bind mount to mount models dir on each spark node
    networks:
      - flight_prediction_network

  spark-submit:
    container_name: spark-submit
    build: 
      context: ./spark
      args:
        - JAR_NAME=flight_prediction_cassandra.jar
    environment:
      - SPARK_APPLICATION_MAIN_CLASS=es.upm.dit.ging.predictor.MakePrediction
      - "SPARK_SUBMIT_ARGS=--packages com.datastax.spark:spark-cassandra-connector_2.11:2.4.2,org.apache.spark:spark-sql-kafka-0-10_2.11:2.4.0"
      - SPARK_MASTER_NAME=spark-master
    volumes:
      - ./spark/models/:/job_data/models  #Bind mount to mount models dir on each spark node
    networks:
      - flight_prediction_network

networks:
  flight_prediction_network:
    driver: bridge

volumes:
  cassandra1data:
  cassandra2data:
